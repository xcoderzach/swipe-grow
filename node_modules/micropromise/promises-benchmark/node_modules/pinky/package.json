{
  "name": "pinky",
  "version": "0.1.3",
  "description": "Sweetly small promises/a+ implementation.",
  "main": "./lib/index.js",
  "devDependencies": {
    "LiveScript": "~1.1.1",
    "mocha": "~1.8.1",
    "browserify": "~2.4.3",
    "promises-aplus-tests": "*",
    "chai-as-promised": "~3.2.5",
    "chai": "~1.5.0",
    "mocha-as-promised": "~1.2.1",
    "es5-shim": "~2.0.8"
  },
  "scripts": {
    "cc": "./node_modules/.bin/lsc -o lib -c src/*.ls",
    "test-cc": "./node_modules/.bin/lsc -o lib-test -c test/*.ls",
    "pretest": "npm run-script cc && npm run-script test-cc",
    "test": "./node_modules/.bin/mocha lib-test/node.js",
    "pretest-browser": "npm run-script pretest && ./node_modules/.bin/browserify -o test/browser/suite-bundle.js -e test/browser/suite.js",
    "prepublish": "npm run-script cc"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/killdream/pinky.git"
  },
  "author": {
    "name": "Quildreen \"Sorella\" Motta",
    "email": "quildreen@gmail.com"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "calliope": {
    "output": "docs/api",
    "copyright": "Â© 2013 Quildreen \"Sorella\" Motta",
    "packages": [
      {
        "files": [
          "src/*.ls"
        ]
      }
    ]
  },
  "testling": {
    "files": "test/browser/suite.js",
    "preprocess": "npm run-script pretest-browser",
    "browsers": {
      "ie": [
        8,
        9,
        10
      ],
      "firefox": [
        15,
        "nightly"
      ],
      "chrome": [
        21,
        22,
        "canary"
      ],
      "opera": [
        10,
        12,
        "next"
      ],
      "safari": [
        5.1
      ]
    },
    "harness": "mocha"
  },
  "readme": "# Pinky [![Build Status](https://travis-ci.org/killdream/pinky.png)](https://travis-ci.org/killdream/pinky) ![Dependencies Status](https://david-dm.org/killdream/pinky.png)\n\nSweetly small promises/a+ implementation.\n\n\n## Platform support\n\nShould work fine in ES3.\n\n\n## Example\n\n```js\nvar pinky = require('pinky')\n\nvar eventual = pinky()\nvar eventual2 = eventual.then( function(a){ return a + 1 }\n                             , function(a){ return a - 1 })\n\neventual.fulfill(10)\neventual2.then( console.log.bind(console, 'ok:')\n              , console.log.bind(console, 'failed:'))\n// => ok: 11\n```\n\n\n## Installing\n\nJust grab it from NPM:\n\n    $ npm install pinky\n    \n    \n## Tests\n\nTests only run on Node right now, so just:\n\n    $ npm test\n    \n\n## A note on performance\n\nThe promises/a+ specification requires things to be asynchronous. To do that,\nPinky uses `process.nextTick` in Node.js, and `setImmediate` in a DOM\nenvironment. However, `setImmediate` is a Microsoft thing, and it's unlikely to\nbe implemented anywhere else, and in that case we fall back to the slow\n`setTimeout`. Thus, providing a fallback for `setImmediate` might speed things\nup a bit.\n\n\n## Documentation\n\nA quick reference of the API can be built using [Calliope][]:\n\n    $ npm install -g calliope\n    $ calliope build\n\n\n## Tests\n\nYou can run all tests using Mocha:\n\n    $ npm test\n\n\n## Licence\n\nMIT/X11. ie.: do whatever you want.\n\n\n## Why? WHY?\n\nMost promise implementations I've seen plainly do way too much. OTOH Minimal\npromise implementations (like [PinkySwear][]) provide a terrible API, which\nreally sucks.\n\nSo, I wrote Pinky to be a minimal and fast baseline for extensions to\npromises/a+. Some implementation ideas are taken straight out from [avow][],\nbtw, but I might revisit this in the future and try to optimise things.\n\n\n\n[Calliope]: https://github.com/killdream/calliope\n[es5-shim]: https://github.com/kriskowal/es5-shim\n[PinkySwear]: https://github.com/timjansen/PinkySwear.js\n[avow]: https://github.com/briancavalier/avow\n",
  "bugs": {
    "url": "https://github.com/killdream/pinky/issues"
  },
  "_id": "pinky@0.1.3",
  "_from": "pinky@~0.1.3"
}
