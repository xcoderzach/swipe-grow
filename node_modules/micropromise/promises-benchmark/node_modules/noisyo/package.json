{
  "name": "noisyo",
  "version": "0.1.1",
  "description": "Drinks and vomits Stream contents. Promised to be really noisy.",
  "main": "./lib/index.js",
  "devDependencies": {
    "LiveScript": "~1.1.1",
    "mocha": "~1.8.1",
    "mocha-as-promised": "~1.2.1",
    "chai-as-promised": "~3.2.5",
    "chai": "~1.5.0"
  },
  "scripts": {
    "cc": "./node_modules/.bin/lsc -o lib -c src/*.ls",
    "test-cc": "./node_modules/.bin/lsc -o lib-test -c test/*.ls",
    "pretest": "npm run-script cc && npm run-script test-cc",
    "test": "./node_modules/.bin/mocha lib-test/*.js",
    "pretest-browser": "npm run-script pretest && ./node_modules/.bin/browserify -o test/browser/suite-bundle.js -e test/browser/suite.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/killdream/noisyo.git"
  },
  "author": {
    "name": "Quildreen \"Sorella\" Motta",
    "email": "quildreen@gmail.com"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "calliope": {
    "output": "docs/api",
    "copyright": "Â© 2013 Quildreen \"Sorella\" Motta",
    "packages": [
      {
        "files": [
          "src/*.ls"
        ]
      }
    ]
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "dependencies": {
    "pinky": "~0.1.2",
    "pinky-combinators": "~0.1.1"
  },
  "readme": "# Noisyo [![Build Status](https://travis-ci.org/killdream/noisyo.png)](https://travis-ci.org/killdream/noisyo) ![Dependencies Status](https://david-dm.org/killdream/noisyo.png)\n\n**Note that this only works in Node 0.10 now, using the new Streams.**\n\nDrinks and vomits Stream contents. Promised to be really noisy.\n\nAs you could probably guess, this is totes influenced by the [Clojure core\nlibrary](http://clojuredocs.org/clojure_core/clojure.core/slurp). But more\ngeneral :D\n\n\n## Example\n\n```js\nvar noisyo = require('noisyo')\nvar spit   = noisyo.spit\nvar slurp  = noisyo.slurp\n\n// Slurp takes a Stream and returns a Promise of its contents.\n// Spit takes a Stream, and some contents, and returns a Promise of the\n// eventual draining.\nspit(process.stdout, slurp(process.stdin))\n\n// So, why not just `.pipe()` you faggot?\n// Well, these work with both Strings and Streams interchangeably.\nvar input = slurp(process.stdin)\ninput.then(function(data) {\n  console.log(data)\n  spit(fs.createWriteStream('foo.txt'), data)\n})\n\n// Obviously, you *will* want to use Streams directly if you're interested in\n// piping between them, this is not a substitute for Streams, just a nice,\n// high-level way of getting to its contents in one-shot quickly and\n// asynchronously. But it will buffer the whole thing in memory, which might be\n// *bad* in certain cases.\n```\n\n\n## Installing\n\nJust grab it from NPM:\n\n    $ npm install noisyo\n\n\n## Documentation\n\nA quick reference of the API can be built using [Calliope][]:\n\n    $ npm install -g calliope\n    $ calliope build\n\n\n## Tests\n\nYou can run all tests using Mocha:\n\n    $ npm test\n\n\n## Licence\n\nMIT/X11. ie.: do whatever you want.\n\n[Calliope]: https://github.com/killdream/calliope\n[es5-shim]: https://github.com/kriskowal/es5-shim\n",
  "bugs": {
    "url": "https://github.com/killdream/noisyo/issues"
  },
  "_id": "noisyo@0.1.1",
  "_from": "noisyo@~0.1.1"
}
