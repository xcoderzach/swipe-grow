{
  "name": "pinky-combinators",
  "version": "0.1.1",
  "description": "Sweet combinators for promises/a+",
  "main": "./lib/index.js",
  "devDependencies": {
    "LiveScript": "~1.1.1",
    "mocha": "~1.8.1",
    "es5-shim": "~2.0.5",
    "browserify": "~2.4.3",
    "mocha-as-promised": "~1.2.1",
    "chai-as-promised": "~3.2.5",
    "chai": "~1.5.0"
  },
  "scripts": {
    "cc": "./node_modules/.bin/lsc -o lib -c src/*.ls",
    "test-cc": "./node_modules/.bin/lsc -o lib-test -c test/*.ls",
    "pretest": "npm run-script cc && npm run-script test-cc",
    "test": "./node_modules/.bin/mocha lib-test/*.js",
    "pretest-browser": "npm run-script pretest && ./node_modules/.bin/browserify -o test/browser/suite-bundle.js -e test/browser/suite.js",
    "prepublish": "npm run-script cc"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/killdream/pinky-combinators.git"
  },
  "author": {
    "name": "Quildreen \"Sorella\" Motta",
    "email": "quildreen@gmail.com"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "calliope": {
    "output": "docs/api",
    "copyright": "Â© 2013 Quildreen \"Sorella\" Motta",
    "packages": [
      {
        "files": [
          "src/*.ls"
        ]
      }
    ]
  },
  "testling": {
    "files": "test/browser/suite.js",
    "preprocess": "npm run-script pretest-browser",
    "browsers": {
      "ie": [
        8,
        9,
        10
      ],
      "firefox": [
        15,
        "nightly"
      ],
      "chrome": [
        21,
        22,
        "canary"
      ],
      "opera": [
        10,
        12,
        "next"
      ],
      "safari": [
        5.1
      ]
    },
    "harness": "mocha"
  },
  "dependencies": {
    "pinky": "~0.1.2"
  },
  "readme": "# Pinky Combinators [![Build Status](https://travis-ci.org/killdream/pinky-combinators.png)](https://travis-ci.org/killdream/pinky-combinators) ![Dependencies Status](https://david-dm.org/killdream/pinky-combinators.png)\n\nSweet combinators for promises/a+.\n\nEven though it uses pinky under the covers, it should be interoperable with any\nlibrary implementing the promises/a+ specification.\n\n\n### Platform support\n\nThis library assumes an ES5 environment, but can be easily supported in ES3\nplatforms by the use of shims. Just include [es5-shim][] :3\n\n[![browser support](http://ci.testling.com/killdream/pinky-combinators.png)](http://ci.testling.com/killdream/pinky-combinators)\n\n\n### Example\n\n```js\nvar pinky = require('pinky')\nvar p = require('pinky-combinators')\n\n// Sequencing operations\np.pipeline([ read('user.json')\n           , JSON.parse\n           , get('data')\n           , JSON.stringify\n           , write('data.json') ])\n .otherwise(function(e){ throw e })\n\n// Or function-composition style f . g\np.compose([ splitLines, read('log.txt') ])\n .then(function(lines){ ... })\n\n// Parallel computations\np.all([ read('a.txt'), read('b.txt'), read('c.txt') ])\n .then( function(as)  { console.log(as.join('\\n')) }\n      , function(err) { throw err                  })\n \n// First come, first served\np.any([ request('http://api.example.com/foo')\n      , request('http://api2.example.com/foo') ])\n .then(function(a){ saveToDatabase(a) }, function(err){ throw err })\n```\n\n\n### Installing\n\nJust grab it from NPM:\n\n    $ npm install pinky-combinators\n\n\n### Documentation\n\nA quick reference of the API can be built using [Calliope][]:\n\n    $ npm install -g calliope\n    $ calliope build\n\n\n### Tests\n\nYou can run all tests using Mocha:\n\n    $ npm test\n\n\n### Licence\n\nMIT/X11. ie.: do whatever you want.\n\n[Calliope]: https://github.com/killdream/calliope\n[es5-shim]: https://github.com/kriskowal/es5-shim\n",
  "bugs": {
    "url": "https://github.com/killdream/pinky-combinators/issues"
  },
  "_id": "pinky-combinators@0.1.1",
  "_from": "pinky-combinators@~0.1.1"
}
