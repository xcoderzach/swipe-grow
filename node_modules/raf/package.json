{
  "name": "raf",
  "version": "2.0.1",
  "description": "requestAnimationFrame polyfill for node and the browser",
  "main": "index.js",
  "scripts": {
    "testling": "browserify test.js | testling",
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisdickinson/raf.git"
  },
  "keywords": [
    "requestAnimationFrame",
    "polyfill"
  ],
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us"
  },
  "contributors": [
    {
      "name": "Christian Maughan Tegnér",
      "email": "christian.tegner@gmail.com"
    }
  ],
  "license": "MIT",
  "devDependencies": {
    "testling": "~1.6.1",
    "browserify": "~4.1.2",
    "tape": "~2.12.3"
  },
  "dependencies": {
    "performance-now": "~0.1.3"
  },
  "testling": {
    "files": "test.js",
    "browsers": [
      "iexplore/6.0..latest",
      "firefox/3.0..6.0",
      "firefox/15.0..latest",
      "firefox/nightly",
      "chrome/4.0..10.0",
      "chrome/20.0..latest",
      "chrome/canary",
      "opera/10.0..latest",
      "opera/next",
      "safari/4.0..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest"
    ]
  },
  "readme": "# raf\n\n[![Browser Support](http://ci.testling.com/chrisdickinson/raf.png)](http://ci.testling.com/chrisdickinson/raf)\n\nrequestAnimationFrame polyfill for node and the browser.\n\n```js\nvar raf = require('raf')\n\nraf(function tick() {\n  // Animation logic\n  raf(tick)\n})\n```\n\n**Note:** The stream/event emitter logic found in versions prior to 1.0.0 can be found in [raf-stream](https://www.npmjs.org/package/raf-stream).\n\n# API\n\n[Documentation at Mozilla Developer Network](https://developer.mozilla.org/en-US/docs/Web/API/window.requestAnimationFrame), [W3 Specification](http://www.w3.org/TR/animation-timing/#requestAnimationFrame)\n\n```js\nvar raf = require('raf')\n```\n\n## var handle = raf(callback)\n\n`callback` is the function to invoke in the next frame. `handle` is a long integer value that uniquely identifies the entry in the callback list. This is a non-zero value, but you may not make any other assumptions about its value.\n\n## raf.cancel(handle)\n\n`handle` is the entry identifier returned by `raf()`. Removes the queued animation frame callback (other queued callbacks will still be invoked unless cancelled).\n\n# Acknowledgments\n\nBased on work by Erik Möller, Paul Irish, and Tino Zijdel (https://gist.github.com/paulirish/1579671)\n\n# license\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/chrisdickinson/raf/issues"
  },
  "_id": "raf@2.0.1",
  "_from": "raf@"
}
